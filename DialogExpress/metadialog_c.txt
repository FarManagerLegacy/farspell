metaquote %[]
begin
%[foreach dialog]
/******************************************************************************
 %[dialog.id]
 ******************************************************************************/
#define %[prefix]%[dialog.cid]_Width %[dialog.width]
#define %[prefix]%[dialog.cid]_Height %[dialog.height]
#define %[prefix]%[dialog.cid]_NItems %[items.count]
#define %[prefix]%[dialog.cid]_HelpTopic "%[dialog.helptopic]"
struct FarDialogItem* %[prefix]%[dialog.cid](const struct PluginStartupInfo *pInfo)
{
  struct FarDialogItem Items[] = { 
%[foreach item]
%[has msgid?]
    { %[type], %[x1], %[y1], %[x2], %[y2], %[focused], %[selected], %[flags] /* msgid=%[msgid] */ },
%[other]
    { %[type], %[x1], %[y1], %[x2], %[y2], %[focused], %[selected], %[flags]%[cdata] },
%[next item]
    { 0 },
  };
  struct FarDialogItem *pItems = (struct FarDialogItem *)malloc(sizeof(Items));
  memcpy(pItems, Items, sizeof(Items));
%[foreach item]
%[has msgid?]
  strcpy((pItems+%[index])->Data, pInfo->GetMsg(pInfo->ModuleNumber, %[msgid]));
%[has history?]
  (pItems+%[index])->History = "%[history]";
%[next item]
  return pItems;
}

int __inline %[prefix]%[dialog.cid]Index(int nId)
{
  switch(nId)
  {
%[foreach item]
%[has id?]
    case %[id]: return %[index];
%[next item]
  }
  return 0;
}

int __inline %[prefix]%[dialog.cid]Id(int nIndex)
{
  switch(nIndex)
  {
%[foreach item]
    case %[index]: return %[id];
%[next item]
  }
  return 0;
}

%[foreach item]
%[has id?]
#define %[prefix]%[dialog.cid]Index_%[cid] %[index]
%[next item]

%[foreach item]
#define %[prefix]%[dialog.cid]Id_%[index] %[id]
%[next item]
%[next dialog]

